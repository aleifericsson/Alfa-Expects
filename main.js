(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>r});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,"body{\n    background-color: #242424;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;AAC7B",sourcesContent:["body{\n    background-color: #242424;\n}"],sourceRoot:""}]);const r=s},278:(n,e,t)=>{t.d(e,{Z:()=>r});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,".background{\n    width: 100vw;\n    height:100vh;\n    background-size:cover;\n    padding:0 auto;\n}\n\n.map{\n    width:100vw;\n    position:absolute;\n    height:48.7vw;\n    background-size:cover;\n    left:50%;\n    top:50%;\n    transform: translate(-50%, -50%);\n}\n\n@media screen and (max-width:1000px) {\n    .background{\n        display:flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n    }\n    .space{\n        height:25vh;\n    }\n}\n\n@media screen and (min-width:1000px) {\n    .background{\n        display:flex;\n        align-items: center;\n    }\n    .space{\n        height:0px;\n        position:relative;\n    }\n}\n\n.line {\n    position:absolute;\n    height:100%;\n    left: 50%;\n    color:red;\n    border-left: 1px solid red;\n }","",{version:3,sources:["webpack://./src/ui/background.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,YAAY;IACZ,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,qBAAqB;IACrB,QAAQ;IACR,OAAO;IACP,gCAAgC;AACpC;;AAEA;IACI;QACI,YAAY;QACZ,sBAAsB;QACtB,6BAA6B;IACjC;IACA;QACI,WAAW;IACf;AACJ;;AAEA;IACI;QACI,YAAY;QACZ,mBAAmB;IACvB;IACA;QACI,UAAU;QACV,iBAAiB;IACrB;AACJ;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,SAAS;IACT,SAAS;IACT,0BAA0B;CAC7B",sourcesContent:[".background{\n    width: 100vw;\n    height:100vh;\n    background-size:cover;\n    padding:0 auto;\n}\n\n.map{\n    width:100vw;\n    position:absolute;\n    height:48.7vw;\n    background-size:cover;\n    left:50%;\n    top:50%;\n    transform: translate(-50%, -50%);\n}\n\n@media screen and (max-width:1000px) {\n    .background{\n        display:flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n    }\n    .space{\n        height:25vh;\n    }\n}\n\n@media screen and (min-width:1000px) {\n    .background{\n        display:flex;\n        align-items: center;\n    }\n    .space{\n        height:0px;\n        position:relative;\n    }\n}\n\n.line {\n    position:absolute;\n    height:100%;\n    left: 50%;\n    color:red;\n    border-left: 1px solid red;\n }"],sourceRoot:""}]);const r=s},626:(n,e,t)=>{t.d(e,{Z:()=>f});var o=t(537),a=t.n(o),i=t(645),s=t.n(i),r=t(667),c=t.n(r),A=new URL(t(828),t.b),d=new URL(t(639),t.b),l=s()(a()),p=c()(A),u=c()(d);l.push([n.id,`@font-face {\n    font-family: 'Fira Sans';\n    src: url(${p}),\n      url(${u});\n    font-weight: 400;\n    font-style: normal;\n  }\n\n.box{\n    display:flex;\n    flex-direction: column;\n    border: 5px solid whitesmoke;\n    border-radius: 10px;\n    background-color: #242424;\n    justify-content: space-between;\n    font-family: 'Fira Sans', sans-serif;\n    color: whitesmoke;\n    align-items: center;\n    padding:5px;\n    transition: cubic-bezier(1,0,0,1);\n    transition-duration: 500ms;\n}\n\n.title{\n    font-style:italic;\n    font-weight:700;   \n    font-size: 36px; \n}\n\n@media screen and (min-width:1000px) {\n    .box{\n        position: absolute;\n        height:250px;\n        width:350px;\n        top:40vh;\n        transform: translate(-50%, -50%);\n    }\n\n    .left-side{\n        left: 25vw;\n    }\n\n    .right-side{\n        left:75vw;\n    }\n}\n\n@media screen and (max-width:1000px) {\n    .box{\n        width:350px;\n        height:250px;\n        align-self: center;\n    }\n}\n\n.form-text{\n    font-size:20px;\n    margin:0;\n}\n`,"",{version:3,sources:["webpack://./src/ui/box.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB;6CAC8C;IAC9C,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,YAAY;IACZ,sBAAsB;IACtB,4BAA4B;IAC5B,mBAAmB;IACnB,yBAAyB;IACzB,8BAA8B;IAC9B,oCAAoC;IACpC,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;IACX,iCAAiC;IACjC,0BAA0B;AAC9B;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,eAAe;AACnB;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;QACZ,WAAW;QACX,QAAQ;QACR,gCAAgC;IACpC;;IAEA;QACI,UAAU;IACd;;IAEA;QACI,SAAS;IACb;AACJ;;AAEA;IACI;QACI,WAAW;QACX,YAAY;QACZ,kBAAkB;IACtB;AACJ;;AAEA;IACI,cAAc;IACd,QAAQ;AACZ",sourcesContent:["@font-face {\n    font-family: 'Fira Sans';\n    src: url('../fonts/FiraSansCondensed-Regular.ttf'),\n      url('../fonts/FiraSansCondensed-Italic.ttf');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n.box{\n    display:flex;\n    flex-direction: column;\n    border: 5px solid whitesmoke;\n    border-radius: 10px;\n    background-color: #242424;\n    justify-content: space-between;\n    font-family: 'Fira Sans', sans-serif;\n    color: whitesmoke;\n    align-items: center;\n    padding:5px;\n    transition: cubic-bezier(1,0,0,1);\n    transition-duration: 500ms;\n}\n\n.title{\n    font-style:italic;\n    font-weight:700;   \n    font-size: 36px; \n}\n\n@media screen and (min-width:1000px) {\n    .box{\n        position: absolute;\n        height:250px;\n        width:350px;\n        top:40vh;\n        transform: translate(-50%, -50%);\n    }\n\n    .left-side{\n        left: 25vw;\n    }\n\n    .right-side{\n        left:75vw;\n    }\n}\n\n@media screen and (max-width:1000px) {\n    .box{\n        width:350px;\n        height:250px;\n        align-self: center;\n    }\n}\n\n.form-text{\n    font-size:20px;\n    margin:0;\n}\n"],sourceRoot:""}]);const f=l},145:(n,e,t)=>{t.d(e,{Z:()=>f});var o=t(537),a=t.n(o),i=t(645),s=t.n(i),r=t(667),c=t.n(r),A=new URL(t(828),t.b),d=new URL(t(639),t.b),l=s()(a()),p=c()(A),u=c()(d);l.push([n.id,`@font-face {\n    font-family: 'Fira Sans';\n    src: url(${p}),\n      url(${u});\n    font-weight: 400;\n    font-style: normal;\n  }\n\n.form{\n    display:flex;\n    justify-content: space-evenly;\n    width:auto;\n    padding-top:5px;\n    gap:10px;\n}\n\n#city{\n    border-radius: 5px;\n    border: 0;\n    font-size:15px;\n    font-family: 'Fira Sans';\n}\n\n#submit{\n    border: 1px solid whitesmoke;\n    border-radius: 5px;\n    background-color: #242424;\n    font-weight: 600;\n    color: whitesmoke;\n    font-size:15px;\n    font-family: 'Fira Sans';\n}`,"",{version:3,sources:["webpack://./src/ui/form.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB;6CAC8C;IAC9C,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,YAAY;IACZ,6BAA6B;IAC7B,UAAU;IACV,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,cAAc;IACd,wBAAwB;AAC5B;;AAEA;IACI,4BAA4B;IAC5B,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,iBAAiB;IACjB,cAAc;IACd,wBAAwB;AAC5B",sourcesContent:["@font-face {\n    font-family: 'Fira Sans';\n    src: url('../fonts/FiraSansCondensed-Regular.ttf'),\n      url('../fonts/FiraSansCondensed-Italic.ttf');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n.form{\n    display:flex;\n    justify-content: space-evenly;\n    width:auto;\n    padding-top:5px;\n    gap:10px;\n}\n\n#city{\n    border-radius: 5px;\n    border: 0;\n    font-size:15px;\n    font-family: 'Fira Sans';\n}\n\n#submit{\n    border: 1px solid whitesmoke;\n    border-radius: 5px;\n    background-color: #242424;\n    font-weight: 600;\n    color: whitesmoke;\n    font-size:15px;\n    font-family: 'Fira Sans';\n}"],sourceRoot:""}]);const f=l},395:(n,e,t)=>{t.d(e,{Z:()=>r});var o=t(537),a=t.n(o),i=t(645),s=t.n(i)()(a());s.push([n.id,".weatherDisp{\n    align-self:flex-start;\n    margin:0px 35px;\n}\n\n.city{\n    font-weight:400;   \n    font-size: 30px; \n}\n\n.loading{\n    font-weight:400;   \n    font-size: 30px; \n    position: relative;\n    left:80px;\n}\n.load-image{\n    position:relative;\n    left:-50px;\n}\n\n.weatherStack{\n    display:flex;\n    justify-content: space-evenly;\n    width:auto;\n    gap:20px;\n}\n\n.weatherDay{\n    margin:0px;\n    font-size: 20px;\n    white-space: nowrap;\n}\n\n.icon{\n    font-size: 40px;\n}","",{version:3,sources:["webpack://./src/ui/weatherDisp.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,SAAS;AACb;AACA;IACI,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,UAAU;IACV,QAAQ;AACZ;;AAEA;IACI,UAAU;IACV,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB",sourcesContent:[".weatherDisp{\n    align-self:flex-start;\n    margin:0px 35px;\n}\n\n.city{\n    font-weight:400;   \n    font-size: 30px; \n}\n\n.loading{\n    font-weight:400;   \n    font-size: 30px; \n    position: relative;\n    left:80px;\n}\n.load-image{\n    position:relative;\n    left:-50px;\n}\n\n.weatherStack{\n    display:flex;\n    justify-content: space-evenly;\n    width:auto;\n    gap:20px;\n}\n\n.weatherDay{\n    margin:0px;\n    font-size: 20px;\n    white-space: nowrap;\n}\n\n.icon{\n    font-size: 40px;\n}"],sourceRoot:""}]);const r=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(s[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&s[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},s=[],r=0;r<n.length;r++){var c=n[r],A=o.base?c[0]+o.base:c[0],d=i[A]||0,l="".concat(A," ").concat(d);i[A]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=a(u,o);o.byIndex=r,e.splice(r,0,{identifier:l,updater:f,references:1})}s.push(l)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var r=t(i[s]);e[r].references--}for(var c=o(n,a),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},639:(n,e,t)=>{n.exports=t.p+"db2bff0f6aed5d7bc40f.ttf"},828:(n,e,t)=>{n.exports=t.p+"514b8df8cb3689410cef.ttf"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),i=t(569),s=t.n(i),r=t(565),c=t.n(r),A=t(216),d=t.n(A),l=t(589),p=t.n(l),u=t(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;const m=t.p+"fd70c56e5342b4ddda01.png",h=t.p+"f1868fd0383a9033a023.png";var C=t(278),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=s().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=d(),e()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals;var b=t(626),I={};I.styleTagTransform=p(),I.setAttributes=c(),I.insert=s().bind(null,"head"),I.domAPI=a(),I.insertStyleElement=d(),e()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;var v=t(145),y={};y.styleTagTransform=p(),y.setAttributes=c(),y.insert=s().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=d(),e()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;var x=t(395),B={};B.styleTagTransform=p(),B.setAttributes=c(),B.insert=s().bind(null,"head"),B.domAPI=a(),B.insertStyleElement=d(),e()(x.Z,B),x.Z&&x.Z.locals&&x.Z.locals;var w={a:"b41c",b:"20f",c:"9",d:"0703a",e:"e",f:"11d5ff",g:"02",h:"2",i:"fc2c",n:"4f4",o:"3c6947b",p:"db6402c18f",q:"🤨",r:"7632f",s:"6af79",t:"654e409"};const E=t.p+"057a07c99a528e24758f.svg",S=t.p+"acacccf2475f1ff290be.svg",k=t.p+"395c6d34650c4d65a0fd.svg",Z=t.p+"f0577ed0eacf89147215.svg",L=t.p+"b694e4df7b1dd2fc9831.svg",j=t.p+"216aa019fb16c2f8bfae.svg",Q=t.p+"3405d5c3244903ca960b.svg",T=t.p+"c90fde9c9a1c5b9093d7.svg",z=t.p+"1d567bfbec6fda7e0b8d.svg",U=function(n,e,t,o,a){var i=t,s=new Date(0);s.setUTCSeconds(i),this.city=n,this.country=e,this.day=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][s.getDay()];const r=[{img:E,code:"01"},{img:S,code:"02"},{img:k,code:"03"},{img:Z,code:"04"},{img:L,code:"09"},{img:j,code:"10"},{img:Q,code:"11"},{img:T,code:"13"},{img:z,code:"50"}];this.icon_code=o.substring(0,2);const c=r.findIndex((n=>n.code==this.icon_code));this.icon=r[c].img,this.day_temp=Math.round(a).toString()+" °C"};let $=[];const F=t.p+"d87e86bbaef5d76c2cb5.svg";let R=[];const Y=(n,e,t)=>{const o=document.createElement("div");o.classList.add("weatherDay");const a=document.createElement("div");a.textContent=n,o.appendChild(a);const i=new Image;i.src=e,i.classList.add("icon"),o.appendChild(i);const s=document.createElement("div");return s.textContent=t,o.appendChild(s),o},q=()=>{const n=document.createElement("div");n.classList.add("box"),n.classList.remove("right-side");const e=document.createElement("div");e.classList.add("title"),e.textContent="Alfa Expects",n.appendChild(e),n.appendChild((()=>{const n=document.createElement("div");n.classList.add("weatherDisp");const e=document.createElement("div");e.classList.add("city"),e.textContent="",n.appendChild(e);const t=document.createElement("div");t.classList.add("weatherStack");const o=document.createElement("div");o.classList.add("loading"),o.textContent="Loading...",t.appendChild(o);const a=new Image;return a.src=F,a.classList.add("load-image"),t.appendChild(a),n.appendChild(t),n})());const t=document.createElement("div");t.classList.add("frame-deux");const o=document.createElement("div");return o.classList.add("form-text"),o.textContent="Enter a city:",t.appendChild(o),t.appendChild((()=>{const n=document.createElement("form");n.classList.add("form");const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","city"),e.setAttribute("name","city"),e.setAttribute("autocomplete","off"),n.appendChild(e);const t=document.createElement("input");return t.setAttribute("type","submit"),t.setAttribute("id","submit"),t.textContent="Submit",n.appendChild(t),n})()),n.appendChild(t),n},P=t.p+"0c9ae63e262e0a9778cb.svg",M=(n,e)=>{let t=n-5.725;t<=-180&&(t=o+180),t=(t+180)/360*100;let o=100-(e+90)/180*100;document.querySelector(".pin").setAttribute("style",`position:absolute;top:${o}%;left:${t}%;`)};document.body.appendChild((()=>{const n=document.createElement("div");n.classList.add("background"),n.setAttribute("style",`background-image:url(${h});`);const e=document.createElement("div");e.setAttribute("style",`background-image:url(${m});`),e.classList.add("map"),n.appendChild(e),n.appendChild(q());const t=document.createElement("div");t.classList.add("space"),n.appendChild(t);const o=document.createElement("div");o.classList.add("line"),n.appendChild(o);const a=new Image;return a.src=P,a.classList.add("pin"),e.appendChild(a),n})()),M(-2.2426,53.4808),async function(){const n=await(async()=>{let n,e=document.URL;const t=e.lastIndexOf("=");n=-1==t?"manchester":e.substring(t+1);const o=await(async()=>{const n=await fetch("https://raw.githubusercontent.com/openfootball/football.json/master/2017-18/en.1.json");return(await n.json()).rounds[23].matches[2].team1})(),a=await(async n=>{const e=await n.toLowerCase().split(" ")[0].split("");let t="";return e.forEach((n=>t+=w[n])),t})(o),i=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=${a}`);let s=await i.json();if("404"===s.cod){n="manchester";const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=${a}`);s=await e.json()}const r=s.coord.lon,c=s.coord.lat;(n=>{const e=document.querySelector(".box");n<=5.725?(e.classList.add("right-side"),e.classList.remove("left-side")):(e.classList.remove("right-side"),e.classList.add("left-side"))})(r),M(r,c);const A=await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${c}&lon=${r}&exclude=minutely,alerts&units=metric&appid=${a}`);return[s,await A.json()]})();var e,t;e=n[0],t=n[1],$=[],t.daily.forEach((n=>$.push(new U(e.name,e.sys.country,n.dt,n.weather[0].icon,n.temp.day)))),(()=>{const n=document.querySelector(".weatherStack");n.innerHTML="",R=[];for(let n=0;n<5;n++){const e=$[n];R.push(Y(e.day,e.icon,e.day_temp))}R.forEach((e=>n.appendChild(e))),document.querySelector(".city").textContent=`${$[0].city}, ${$[0].country}`})()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,